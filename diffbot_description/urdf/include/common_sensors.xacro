<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:macro name="gpu_laser" params="prefix parent_link sensor_prop "> 

  <xacro:property name="mesh"
     value="${sensor_prop['gpu_laser']['mesh']}"/>

  <link name="${prefix}_gpu_laser_link">
      <xacro:if value="${mesh != '' }" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://${package_name}/meshes/sensors/${mesh}" />
        </geometry>
        <material name="dark_grey"/>
      </visual>
    </xacro:if>
    <xacro:if value="${mesh == '' }" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
         <cylinder radius="${sensor_prop['gpu_laser']['radius']}" length="${sensor_prop['gpu_laser']['length']}"/>
        </geometry>
        <material name="red"/>
      </visual>
    </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${sensor_prop['gpu_laser']['radius']}" length="${sensor_prop['gpu_laser']['length']}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="${sensor_prop['gpu_laser']['mass']}"
                              r="${sensor_prop['gpu_laser']['radius']}"
                              l="${sensor_prop['gpu_laser']['length']}"
                              o_xyz="0 0 0"
                              o_rpy="0 0 0" >
      </xacro:cylinder_inertia> 
  </link>
  <gazebo reference="${prefix}_gpu_laser_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <joint name="${prefix}_gpu_laser_joint" type="fixed">
    <parent link="${parent_link}"/>
    <child link="${prefix}_gpu_laser_link"/>
    <origin xyz="${sensor_prop['gpu_laser']['dx']} ${sensor_prop['gpu_laser']['dy']} ${sensor_prop['gpu_laser']['dz']}" rpy="0 0 0"/>
    <axis xyz="0 1 0" />
  </joint>

  <!-- hokuyo gazebo references -->
  <gazebo reference="${prefix}_gpu_laser_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor" >
    <!-- sensor type="ray" name="head_hokuyo_sensor" -->
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>${sensor_prop['gpu_laser']['angular_range']['min']}</min_angle>
            <max_angle>${sensor_prop['gpu_laser']['angular_range']['max']}</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!--Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. --> 
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
      <!-- plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so" -->
        <topicName>/${robot_name}/scan</topicName>
        <frameName>${prefix}_gpu_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</xacro:macro>



</robot>